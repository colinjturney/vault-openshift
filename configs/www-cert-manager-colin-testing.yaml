---
apiVersion: v1
kind: ConfigMap
data:
  nginx.conf: |
    server {
            listen 8080 default_server;

            root /usr/share/nginx/html;
            index index.html;

            server_name my-website.com;

            location / {
                    try_files $uri $uri/ =404;
            }
    }
metadata:
  name: nginxconfigmap
  namespace: vault-demo
---
apiVersion: v1
kind: Service
metadata:
  name: cert-manager-colin-testing
  namespace: vault-demo
  labels:
    run: cert-manager-colin-testing
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
    name: http
  selector:
    run: cert-manager-colin-testing
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cert-manager-colin-testing
  namespace: vault-demo
spec:
  selector:
    matchLabels:
      run: cert-manager-colin-testing
  replicas: 2
  template:
    metadata:
      labels:
        run: cert-manager-colin-testing
    spec:
      volumes:
      - name: configmap-volume
        configMap:
          name: nginxconfigmap
      containers:
      - name: nginx
        image: nginxinc/nginx-unprivileged
        ports:
          - containerPort: 8080
        livenessProbe:
          httpGet:
            path: /index.html
            port: 8080
          initialDelaySeconds: 30
          timeoutSeconds: 1
        volumeMounts:
        - mountPath: /etc/nginx/conf.d
          name: configmap-volume
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    # add an annotation indicating the issuer to use.
    cert-manager.io/cluster-issuer: vault-issuer
    cert-manager.io/cluster-resource-namespace: cert-manager
  name: cert-manager-colin-testing
  namespace: vault-demo
spec:
  rules:
  - host: www.cert-manager.colin.testing
    http:
      paths:
      - backend:
          serviceName: cert-manager-colin-testing
          servicePort: 80
        path: /
  tls: # < placing a host in the TLS config will indicate a certificate should be created
  - hosts:
    - www.cert-manager.colin.testing
    secretName: cert-manager.colin.testing # < cert-manager will store the created certificate in this secret.
